import React, { useState, useEffect } from "react";
import { useParams, useNavigate, Outlet } from "react-router-dom";
import qs from "qs";
import api from "../Backend/api";

/* -----------------------------------------------------------
   üîÑ  Home1 Component
   Tolerant to both snake_case and camelCase keys
-------------------------------------------------------------*/

const translations = {
  hindi: {
    home: "‡§π‡•ã‡§Æ",
    login: "‡§≤‡•â‡§ó ‡§á‡§® ‡§ï‡§∞‡•á‡§Ç",
    register: "‡§™‡§Ç‡§ú‡•Ä‡§ï‡§∞‡§£ ‡§ï‡§∞‡•á‡§Ç",
    myProfile: "‡§Æ‡•á‡§∞‡§æ ‡§™‡•ç‡§∞‡•ã‡§´‡§º‡§æ‡§á‡§≤",
    updateProfile: "‡§™‡•ç‡§∞‡•ã‡§´‡§º‡§æ‡§á‡§≤ ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç",
    help: "‡§Æ‡§¶‡§¶",
    searchPlaceholder: "‡§ñ‡•ã‡§ú‡•á‡§Ç...",
    showMore: "‡§î‡§∞ ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç",
    interested: "‡§∞‡•Å‡§ö‡§ø",
    gehu: "‡§ó‡•á‡§π‡•Ç‡§Ç",
    chana: "‡§ö‡§®‡§æ",
    apple: "‡§∏‡•á‡§¨",
  },
  english: {
    home: "Home",
    login: "Login",
    register: "Register",
    myProfile: "My Profile",
    updateProfile: "Update Profile",
    help: "Help",
    searchPlaceholder: "Search...",
    showMore: "Show More",
    interested: "Interested",
    gehu: "Wheat",
    chana: "Chickpeas",
    apple: "Apple",
  },
  
  punjabi: {
    home: "‡®ò‡®∞",
    login: "‡®≤‡®æ‡®ó‡®á‡®®",
    register: "‡®∞‡®ú‡®ø‡®∏‡®ü‡®∞",
    myProfile: "‡®Æ‡©á‡®∞‡®æ ‡®™‡©ç‡®∞‡©ã‡®´‡®æ‡®à‡®≤",
    updateProfile: "‡®™‡©ç‡®∞‡©ã‡®´‡®æ‡®à‡®≤ ‡®Ö‡®™‡®°‡©á‡®ü ‡®ï‡®∞‡©ã",
    savedItems: "‡®∏‡©∞‡®≠‡®æ‡®≤‡©á ‡®Ü‡®à‡®ü‡®Æ",
    help: "‡®Æ‡®¶‡®¶",
    logout: "‡®≤‡®æ‡®ó‡®Ü‡®â‡®ü",
    searchPlaceholder: "‡®ñ‡©ã‡®ú‡©ã...",
    showMore: "‡®π‡©ã‡®∞ ‡®µ‡©á‡®ñ‡©ã",
    gehu: "‡®ó‡©á‡®π‡©Ç‡©∞",
    chana: "‡®ö‡®®‡®æ",
     interested: "	‡®∞‡©Å‡®ö‡©Ä ‡®∞‡©±‡®ñ‡®£ ‡®µ‡®æ‡®≤‡®æ",
    apple: "‡®∏‡©á‡®¨",
  },
  malayalam: {
    home: "‡¥π‡µã‡¥Ç",
    login: "‡¥≤‡µã‡¥ó‡¥ø‡µª",
    register: "‡¥∞‡¥ú‡¥ø‡¥∏‡µç‡¥±‡µç‡¥±‡µº",
    myProfile: "‡¥é‡µª‡¥±‡µÜ ‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ",
    updateProfile: "‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥Ö‡¥™‡µç‚Äå‡¥°‡µá‡¥±‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï",
    savedItems: "‡¥∏‡µá‡¥µ‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥§ ‡¥ê‡¥±‡µç‡¥±‡¥ô‡µç‡¥ô‡µæ",
    help: "‡¥∏‡¥π‡¥æ‡¥Ø‡¥Ç",
    logout: "‡¥≤‡µã‡¥ó‡µó‡¥ü‡µç‡¥ü‡µç",
    searchPlaceholder: "‡¥§‡¥ø‡¥∞‡¥Ø‡µÇ...",
    showMore: "‡¥ï‡µÇ‡¥ü‡µÅ‡¥§‡µΩ ‡¥ï‡¥æ‡¥£‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
    gehu: "‡¥ó‡µá‡¥π‡µÅ",
     interested: "	‡¥§‡¥æ‡¥§‡µç‡¥™‡¥∞‡µç‡¥Ø‡¥Æ‡µÅ‡¥≥‡µç‡¥≥‡¥µ‡µª",
    chana: "‡¥ö‡¥£",
    apple: "‡¥Ü‡¥™‡µç‡¥™‡¥ø‡µæ",
  },
  telugu: {
    home: "‡∞π‡±ã‡∞Æ‡±ç",
    login: "‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç",
    register: "‡∞®‡∞Æ‡±ã‡∞¶‡±Å",
    myProfile: "‡∞®‡∞æ ‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç",
    updateProfile: "‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç ‡∞®‡∞µ‡±Ä‡∞ï‡∞∞‡∞ø‡∞Ç‡∞ö‡±Å",
    savedItems: "‡∞∏‡±á‡∞µ‡±ç ‡∞ö‡±á‡∞∏‡∞ø‡∞® ‡∞Ö‡∞Ç‡∞∂‡∞æ‡∞≤‡±Å",
    help: "‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç",
    logout: "‡∞≤‡∞æ‡∞ó‡±å‡∞ü‡±ç",
    searchPlaceholder: "‡∞∂‡±ã‡∞ß‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø...",
    showMore: "‡∞á‡∞Ç‡∞ï‡∞æ ‡∞ö‡±Ç‡∞™‡∞ø‡∞Ç‡∞ö‡±Å",
    gehu: "‡∞ó‡±á‡∞π‡±Å",
     interested: "	‡∞Ü‡∞∏‡∞ï‡±ç‡∞§‡∞ø ‡∞â‡∞®‡±ç‡∞®‡∞µ‡∞æ‡∞∞‡±Å",
    chana: "‡∞∏‡±Ü‡∞®‡∞ó‡∞≤‡±Å",
    apple: "‡∞Ü‡∞™‡∞ø‡∞≤‡±ç",
  },
  marathi: {
    home: "‡§Æ‡•Å‡§ñ‡•ç‡§Ø‡§™‡•É‡§∑‡•ç‡§†",
    login: "‡§≤‡•â‡§ó‡§ø‡§®",
    register: "‡§®‡•ã‡§Ç‡§¶‡§£‡•Ä",
    myProfile: "‡§Æ‡§æ‡§ù‡•Ä ‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤",
    updateProfile: "‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤ ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡§æ",
    savedItems: "‡§ú‡§§‡§® ‡§ï‡•á‡§≤‡•á‡§≤‡•Ä ‡§µ‡§∏‡•ç‡§§‡•Ç",
    help: "‡§Æ‡§¶‡§§",
    logout: "‡§¨‡§æ‡§π‡•á‡§∞ ‡§™‡§°‡§æ",
    searchPlaceholder: "‡§∂‡•ã‡§ß‡§æ...",
    showMore: "‡§Ö‡§ß‡§ø‡§ï ‡§¶‡§æ‡§ñ‡§µ‡§æ",
    gehu: "‡§ó‡§π‡•Ç",
     interested: "	‡§á‡§ö‡•ç‡§õ‡•Å‡§ï",
    chana: "‡§π‡§∞‡§≠‡§∞‡§æ",
    apple: "‡§∏‡§´‡§∞‡§ö‡§Ç‡§¶",
  },
};

const pick = (obj, ...keys) => {
  for (const k of keys)
    if (obj && obj[k] !== undefined && obj[k] !== null) return obj[k];
  return undefined;
};

const Home1 = () => {
  const { language } = useParams();
  const navigate = useNavigate();
  const t = translations[language] || translations.english;

  const [searchTerm, setSearchTerm] = useState("");
  const [error, setError] = useState("");
  const [loading, setLoading] = useState(false);
  const [products, setProducts] = useState([]);

  const handleSearchChange = (e) => setSearchTerm(e.target.value);

  const handleProfileClick = async () => {
    try {
      const user = JSON.parse(localStorage.getItem("user"));
      if (!user?.role) return navigate(`/Businessman/Notloge/${language}`);

      const roleData = qs.stringify({ role: user.role });
      const resp = await api.post("/user/role-check", roleData, {
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
      });

      if (resp.data.success) {
        return user.role === "farmer"
          ? navigate(`/Farmer/FarmerMyprofile`)
          : navigate(`/Businessman/BusinessmsnMyprofile`);
      }
      alert("Role check failed. Please try again later.");
    } catch (err) {
      console.error("Profile Click Error:", err);
      alert("Failed to navigate to profile.");
    }
  };

  useEffect(() => {
    (async () => {
      try {
        setLoading(true);
        const res = await api.get("/products/list");
        const data = Array.isArray(res.data) ? res.data : res.data.products || [];
        setProducts(data);
      } catch (err) {
        console.error("‚ùå Unable to fetch products:", err);
        setError("Failed to load products.");
      } finally {
        setLoading(false);
      }
    })();
  }, []);

  const navBtn = {
    background: "none",
    border: "none",
    color: "white",
    fontSize: "0.8rem",
    cursor: "pointer",
  };

  return (
    <div
      style={{
        display: "flex",
        flexDirection: "column",
        height: "100vh",
        fontFamily: "Arial, sans-serif",
        backgroundImage: "url('/home1.jpg')",
        backgroundSize: "cover",
        backgroundPosition: "center",
        backgroundBlendMode: "darken",
        backgroundColor: "rgba(0,0,0,0.6)",
        color: "white",
      }}
    >
      {/* Horizontal Navbar */}
      <div
        style={{
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          background: "#28a745",
          padding: "10px 20px",
          color: "white",
          flexWrap: "wrap",
          fontSize: "1.2rem",
        }}
      >
        <div style={{ fontSize: "1.5rem", fontWeight: "bold" }}>Krishi Agro</div>

        <input
          type="text"
          value={searchTerm}
          onChange={handleSearchChange}
          placeholder={t.searchPlaceholder}
          style={{
            width: "150px",
            padding: "3px",
            borderRadius: "3px",
            border: "1px solid #ccc",
            marginRight: "20px",
            fontSize: "1rem",
          }}
        />

        <button
          style={{
            background: "none",
            border: "none",
            color: "white",
            fontSize: "1rem",
            cursor: "pointer",
          }}
          onClick={() => navigate(`/`)}
        >
          {t.home}
        </button>

        <div style={{ display: "flex", gap: "10px" }}>
          <button
            style={{
              background: "white",
              color: "#28a745",
              padding: "5px 10px",
              borderRadius: "5px",
              cursor: "pointer",
            }}
            onClick={() => navigate(`/login/${language}`)}
          >
            {t.login}
          </button>
          <button
            style={{
              background: "white",
              color: "#28a745",
              padding: "5px 10px",
              borderRadius: "5px",
              cursor: "pointer",
            }}
            onClick={() => navigate(`/register/${language}`)}
          >
            {t.register}
          </button>
        </div>
      </div>

      {/* Main Layout */}
      <div style={{ display: "flex", flex: 1, overflow: "hidden" }}>
        {/* Vertical Navbar */}
        <div
          style={{
            width: "100%",
            maxWidth: "120px",
            background: "#333",
            color: "white",
            padding: "10px",
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
            fontSize: "0.8rem",
            minWidth: "60px",
            justifyContent: "space-between",
          }}
        >
          <div
            style={{
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
              gap: "10px",
            }}
          >
            <div style={{ fontSize: "1.2rem", marginBottom: "10px" }}>üë§</div>
            <button style={navBtn} onClick={handleProfileClick}>
              {t.myProfile}
            </button>
          </div>
          <div
            style={{
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
              gap: "10px",
            }}
          >
            <button style={navBtn}>{t.help}</button>
          </div>
        </div>

        {/* Scrollable Content */}
        <div
          style={{
            flex: 1,
            overflowY: "auto",
            padding: "20px",
            fontSize: "1.1rem",
            color: "white",
            backgroundImage: "url('/home1.jpg')",
            backgroundSize: "cover",
            backgroundPosition: "center",
            backgroundBlendMode: "darken",
            backgroundColor: "rgba(0,0,0,0.6)",
          }}
        >
          {loading && <div>Loading products...</div>}
          {error && <div style={{ color: "red" }}>{error}</div>}
          {!loading && products.length === 0 && <div>No products found.</div>}

          {/* Product Grid */}
          <div
            style={{
              display: "grid",
              gridTemplateColumns: "repeat(auto-fit, minmax(280px, 1fr))",
              gap: "20px",
            }}
          >
            {products.map((p) => {
              const name = pick(p, "name");
              const city = pick(p, "city");
              const state = pick(p, "state");
              const qty = pick(p, "quantity_available", "quantityAvailable");
              const description = pick(p, "description", "desc");
              const price = pick(p, "price");

              return (
                <div
                  key={p.id}
                  style={{
                    background: "rgba(255,255,255,0.1)",
                    borderRadius: "8px",
                    overflow: "hidden",
                    boxShadow: "0 0 10px rgba(0,0,0,0.5)",
                    display: "flex",
                    flexDirection: "column",
                    padding: "15px",
                  }}
                >
                  <h2 style={{ margin: "0 0 8px 0" }}>{name}</h2>
                  <p style={{ margin: "0 0 4px 0" }}>
                    <b>City:</b> {city}
                  </p>
                  <p style={{ margin: "0 0 4px 0" }}>
                    <b>State:</b> {state}
                  </p>
                  <p style={{ margin: "0 0 4px 0" }}>
                    <b>Quantity Available:</b> {qty}
                  </p>
                  <p style={{ margin: "0 0 8px 0" }}>
                    <b>Price:</b> ‚Çπ{price}
                  </p>
                  <p style={{ margin: 0 }}>
                    <strong>Description:</strong>{" "}
                    {description?.trim() ? description : "No description provided."}
                  </p>

                  {/* üîπ Interested button */}
                  <button
                    style={{
                      marginTop: "12px",
                      background: "#28a745",
                      color: "white",
                      border: "none",
                      padding: "6px 12px",
                      borderRadius: "4px",
                      cursor: "pointer",
                      fontSize: "0.9rem",
                    }}
                    onClick={() => navigate(`/Businessman/Notloge/${language}`)}
                  >
                    {t.interested}
                  </button>
                </div>
              );
            })}
          </div>

          <Outlet />
        </div>
      </div>
    </div>
  );
};

export default Home1;
